{"ast":null,"code":"var _jsxFileName = \"/Users/narayankumarjha/Documents/practice/portfoliopro/client/src/PortfolioContainer/Home/Header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../Utilities/commonUtils\";\nimport ScrollService from \"../../../Utilities/scrollService\";\nimport { FaBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport index from \"react-typical\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOption, setShowHeaderOption] = useState(false);\n\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHedaerOption = () => {\n    return TOTAL_SCREENS.map((screen, i) => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: getHedaerOptionClass(i),\n        onClick: () => switchScreen(i, screen),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: screen.screen_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, screen.screen_name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  const switchScreen = () => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOption(false);\n  };\n\n  const getHedaerOptionClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS - 1) classes += \"selected-header-option\";\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-option\",\n      onClick: () => setShowHeaderOption(!showHeaderOption),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-hamburger\",\n          onClick: () => setShowHeaderOption(!showHeaderOption),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"header-hamburger-bars\",\n            icon: FaBars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"NK JHA~\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: showHeaderOption ? \"header-options show-hamburger-option\" : \"header-option\",\n          children: getHedaerOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"GUYdPt2zQYVwWnkeyw2YZT8e7xM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/narayankumarjha/Documents/practice/portfoliopro/client/src/PortfolioContainer/Home/Header/Header.js"],"names":["React","useState","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","FaBars","FontAwesomeIcon","index","Header","selectedScreen","setSelectedScreen","showHeaderOption","setShowHeaderOption","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadCaster","subscribe","getHedaerOption","map","screen","i","getHedaerOptionClass","switchScreen","screen_name","screenComponent","document","getElementById","scrollIntoView","behavior","classes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  TOTAL_SCREENS,\n  GET_SCREEN_INDEX,\n} from \"../../../Utilities/commonUtils\";\nimport ScrollService from \"../../../Utilities/scrollService\";\nimport  {FaBars}  from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport index from \"react-typical\";\n\nexport default function Header() {\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOption, setShowHeaderOption] = useState(false);\n\n  const updateCurrentScreen = (currentScreen) => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n  let currentScreenSubscription =\n    ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHedaerOption = () => {\n    return TOTAL_SCREENS.map((screen, i) => {\n      <div\n        key={screen.screen_name}\n        className={getHedaerOptionClass(i)}\n        onClick={() => switchScreen(i, screen)}\n      >\n        <span>{screen.screen_name}</span>\n      </div>;\n    });\n  };\n\n  const switchScreen = () => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n\n    screenComponent.scrollIntoView({ behavior: \"smooth\" });\n    setSelectedScreen(index);\n    setShowHeaderOption(false);\n  };\n\n  const getHedaerOptionClass = (index) => {\n    let classes = \"header-option\";\n\n    if (index < TOTAL_SCREENS - 1) classes += \"selected-header-option\";\n    return;\n  };\n  return (\n    <div>\n      <div\n        className=\"header-option\"\n        onClick={() => setShowHeaderOption(!showHeaderOption)}\n      >\n        <div className=\"header-parent\">\n          <div\n            className=\"header-hamburger\"\n            onClick={() => setShowHeaderOption(!showHeaderOption)}\n          >\n            <FontAwesomeIcon className=\"header-hamburger-bars\" icon={FaBars} />\n          </div>\n          <div className=\"header-logo\">\n            <span>NK JHA~</span>\n          </div>\n          <div\n            className={\n              showHeaderOption\n                ? \"header-options show-hamburger-option\"\n                : \"header-option\"\n            }\n          >\n            {getHedaerOption}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}